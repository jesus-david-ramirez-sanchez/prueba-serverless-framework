openapi: 3.0.3
info:
  title: Library Shop API
  description: API para gestión de libros construida con Serverless Framework y AWS Lambda
  version: 1.0.0
  contact:
    name: API Support
    email: support@libraryshop.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Servidor de desarrollo local
  - url: https://{stage}.api.libraryshop.com
    description: Servidor de producción
    variables:
      stage:
        default: dev
        enum:
          - dev
          - prod
        description: Stage del entorno

paths:
  /books:
    get:
      summary: Obtener libros con filtros
      description: Obtiene libros de la base de datos con filtros opcionales por ID, autor o título
      operationId: getBooks
      tags:
        - Books
      parameters:
        - name: id
          in: query
          description: ID específico del libro
          required: false
          schema:
            type: string
            format: uuid
        - name: author
          in: query
          description: Filtrar por autor (búsqueda parcial)
          required: false
          schema:
            type: string
        - name: title
          in: query
          description: Filtrar por título (búsqueda parcial)
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Número máximo de resultados (por defecto 10)
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Offset para paginación (por defecto 0)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: Libros obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBooksResponse'
              examples:
                all_books:
                  summary: Todos los libros
                  value:
                    message: "Books retrieved successfully"
                    books:
                      - id: "550e8400-e29b-41d4-a716-446655440000"
                        title: "El Señor de los Anillos"
                        author: "J.R.R. Tolkien"
                        isbn: "978-84-450-7054-9"
                        price: 29.99
                        description: "Una épica historia de fantasía"
                        publishedDate: "1954-07-29"
                        createdAt: "2024-01-15T10:30:00.000Z"
                        updatedAt: "2024-01-15T10:30:00.000Z"
                    totalCount: 1
                    filters:
                      id: null
                      author: null
                      title: null
                    pagination:
                      limit: 10
                      offset: 0
                    stage: "dev"
                filtered_by_author:
                  summary: Libros filtrados por autor
                  value:
                    message: "Books retrieved successfully"
                    books:
                      - id: "550e8400-e29b-41d4-a716-446655440000"
                        title: "El Señor de los Anillos"
                        author: "J.R.R. Tolkien"
                        isbn: "978-84-450-7054-9"
                        price: 29.99
                        description: "Una épica historia de fantasía"
                        publishedDate: "1954-07-29"
                        createdAt: "2024-01-15T10:30:00.000Z"
                        updatedAt: "2024-01-15T10:30:00.000Z"
                    totalCount: 1
                    filters:
                      id: null
                      author: "Tolkien"
                      title: null
                    pagination:
                      limit: 10
                      offset: 0
                    stage: "dev"
        '404':
          description: Libro no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found"
                message: "Book not found with the provided ID"
        '405':
          description: Método no permitido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Method Not Allowed"
                message: "Only GET method is allowed"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                message: "An error occurred while processing the request"

    post:
      summary: Crear un nuevo libro
      description: Crea un nuevo libro en la base de datos con validación robusta
      operationId: createBook
      tags:
        - Books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookRequest'
            examples:
              libro_completo:
                summary: Libro con todos los campos
                value:
                  title: "El Señor de los Anillos"
                  author: "J.R.R. Tolkien"
                  isbn: "978-84-450-7054-9"
                  price: 29.99
                  description: "Una épica historia de fantasía que sigue las aventuras de Frodo Bolsón"
                  publishedDate: "1954-07-29"
              libro_minimo:
                summary: Libro con campos mínimos requeridos
                value:
                  title: "1984"
                  author: "George Orwell"
                  isbn: "978-84-397-2077-7"
                  price: 15.50
              libro_invalido:
                summary: Ejemplo de libro con datos inválidos
                value:
                  title: ""
                  author: "Autor Test"
                  isbn: "123"
                  price: -10
                  publishedDate: "2030-01-01"
      responses:
        '201':
          description: Libro creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBookResponse'
              examples:
                success_response:
                  summary: Respuesta exitosa
                  value:
                    message: "Book created successfully"
                    book:
                      id: "550e8400-e29b-41d4-a716-446655440000"
                      title: "El Señor de los Anillos"
                      author: "J.R.R. Tolkien"
                      isbn: "978-84-450-7054-9"
                      price: 29.99
                      description: "Una épica historia de fantasía que sigue las aventuras de Frodo Bolsón"
                      publishedDate: "1954-07-29"
                      createdAt: "2024-01-15T10:30:00.000Z"
                      updatedAt: "2024-01-15T10:30:00.000Z"
                    stage: "dev"
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
              examples:
                validation_error:
                  summary: Error de validación múltiple
                  value:
                    error: "Validation Error"
                    message: "Los datos proporcionados no son válidos"
                    details:
                      - field: "title"
                        message: "El título no puede estar vacío"
                      - field: "isbn"
                        message: "El ISBN debe tener entre 10 y 17 caracteres y contener solo números y guiones"
                      - field: "price"
                        message: "El precio debe ser un número positivo"
                      - field: "publishedDate"
                        message: "La fecha de publicación no puede ser futura"
                json_error:
                  summary: Error de JSON inválido
                  value:
                    error: "Bad Request"
                    message: "Invalid JSON in request body"
        '405':
          description: Método no permitido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Method Not Allowed"
                message: "Only POST method is allowed"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                message: "An error occurred while creating the book"

components:
  schemas:
    CreateBookRequest:
      type: object
      required:
        - title
        - author
        - isbn
        - price
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
          description: Título del libro
          example: "El Señor de los Anillos"
        author:
          type: string
          minLength: 1
          maxLength: 100
          description: Autor del libro
          example: "J.R.R. Tolkien"
        isbn:
          type: string
          pattern: '^[0-9-]{10,17}$'
          description: "ISBN del libro (formato: números y guiones, 10-17 caracteres)"
          example: "978-84-450-7054-9"
        price:
          type: number
          minimum: 0.01
          maximum: 999999.99
          multipleOf: 0.01
          description: Precio del libro (máximo 2 decimales)
          example: 29.99
        description:
          type: string
          maxLength: 1000
          description: Descripción opcional del libro
          example: "Una épica historia de fantasía que sigue las aventuras de Frodo Bolsón"
        publishedDate:
          type: string
          format: date
          description: Fecha de publicación en formato ISO (YYYY-MM-DD)
          example: "1954-07-29"
      additionalProperties: false

    Book:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID único del libro
          example: "550e8400-e29b-41d4-a716-446655440000"
        title:
          type: string
          description: Título del libro
          example: "El Señor de los Anillos"
        author:
          type: string
          description: Autor del libro
          example: "J.R.R. Tolkien"
        isbn:
          type: string
          description: ISBN del libro
          example: "978-84-450-7054-9"
        price:
          type: number
          description: Precio del libro
          example: 29.99
        description:
          type: string
          nullable: true
          description: Descripción del libro
          example: "Una épica historia de fantasía que sigue las aventuras de Frodo Bolsón"
        publishedDate:
          type: string
          format: date
          nullable: true
          description: Fecha de publicación
          example: "1954-07-29"
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del registro
          example: "2024-01-15T10:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
          example: "2024-01-15T10:30:00.000Z"
      required:
        - id
        - title
        - author
        - isbn
        - price
        - createdAt
        - updatedAt

    CreateBookResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de confirmación
          example: "Book created successfully"
        book:
          $ref: '#/components/schemas/Book'
        stage:
          type: string
          enum: [dev, prod]
          description: Stage del entorno donde se creó el libro
          example: "dev"
      required:
        - message
        - book
        - stage

    GetBooksResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de confirmación
          example: "Books retrieved successfully"
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
          description: Lista de libros encontrados
        totalCount:
          type: integer
          description: Número total de libros encontrados
          example: 1
        filters:
          type: object
          properties:
            id:
              type: string
              nullable: true
              description: ID del libro filtrado
            author:
              type: string
              nullable: true
              description: Autor del libro filtrado
            title:
              type: string
              nullable: true
              description: Título del libro filtrado
          description: Filtros aplicados en la búsqueda
        pagination:
          type: object
          properties:
            limit:
              type: integer
              description: Límite de resultados por página
              example: 10
            offset:
              type: integer
              description: Offset para paginación
              example: 0
          description: Información de paginación
        stage:
          type: string
          enum: [dev, prod]
          description: Stage del entorno
          example: "dev"
      required:
        - message
        - books
        - totalCount
        - filters
        - pagination
        - stage

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Tipo de error
          example: "Bad Request"
        message:
          type: string
          description: Mensaje descriptivo del error
          example: "Request body is required"
      required:
        - error
        - message

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: Campo que falló la validación
                    example: "title"
                  message:
                    type: string
                    description: Mensaje específico del error de validación
                    example: "El título no puede estar vacío"
                required:
                  - field
                  - message
              description: Lista detallada de errores de validación
          required:
            - details

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API Key para autenticación (futuro)

tags:
  - name: Books
    description: Operaciones relacionadas con la gestión de libros
